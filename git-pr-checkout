#!/bin/bash
# set -x
ID=$1
BRANCH=pr-$ID
PROJECT=${2:-galaxyproject}

matching_branches=$(git branch | grep '^\s*'$BRANCH'$' | wc -l)

if (( matching_branches > 0 )); then
	echo "Branch $BRANCH already exists"
	git checkout $BRANCH
	exit 0
fi

repo=$(git remote -v | grep ^origin | awk '{print $2}' | sed 's|.*github.com[/:]||' | sed 's|\.git$||;s|/$||;' | sort -u | head -n 1)
# echo $repo
# echo https://api.github.com/repos/$repo/pulls/$ID
# exit 42
data="$(curl --silent https://api.github.com/repos/$repo/pulls/$ID)"
err=$(echo "$data" | jq .message -r)
if [[ "$err" != "null" ]]; then
	echo "Error: $err"
	echo "Detected repo: $repo"
	echo "Detected URL: https://api.github.com/repos/$repo/pulls/$ID"
	exit 1
fi
echo $data | jq . -S

user=$(echo "$data" | jq .user.login -r)
head=$(echo "$data" | jq .head.label -r)
base=$(echo "$data" | jq .base.label -r)
echo $user $head $base

head_org=$(echo "$head" | cut -d: -f 1)
head_bra=$(echo "$head" | cut -d: -f 2)
base_org=$(echo "$base" | cut -d: -f 1)
base_bra=$(echo "$base" | cut -d: -f 2)

echo $head_org $head_bra $base_org $base_bra

if [[ "$head_org" == "$base_org" ]]; then
	git fetch origin
	git checkout "$head_bra"
else
	# Add their remote
	git remote get-url "$user"
	ec=$?
	if (( ec != 0 )); then
		git remote add "$user" "$(echo "$data" | jq .head.repo.ssh_url -r)"
	fi
	git fetch "$user"

	# Fetch our specific PR
	git fetch origin pull/$ID/head:$BRANCH
	# Check it out
	git checkout --track $user/$BRANCH $BRANCH
fi

# And then let us push to their repo.
# git branch --set-upstream-to="$(echo "$head" | sed 's|:|/|')"
# git branch -u remotes/ammaraziz/main $BRANCH
